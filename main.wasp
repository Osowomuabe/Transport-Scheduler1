app RealTime_Transport_Schedular {
  wasp: {
    version: "^0.11.4"
  },
  title: "RealTime_Transport_Schedular",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    role     String
    vehicles Vehicle[]
    drivers  Driver[]
    reports  Report[]
psl=}

entity Vehicle {=psl
    id       Int    @id @default(autoincrement())
    name     String
    status   String
    location String
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
psl=}

entity Driver {=psl
    id     Int    @id @default(autoincrement())
    name   String
    status String
    user   User   @relation(fields: [userId], references: [id])
    userId Int
psl=}

entity Report {=psl
    id          Int    @id @default(autoincrement())
    title       String
    description String
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action createVehicle {
  fn: import { createVehicle } from "@server/actions.js",
  entities: [Vehicle]
}

action createDriver {
  fn: import { createDriver } from "@server/actions.js",
  entities: [Driver]
}

action createReport {
  fn: import { createReport } from "@server/actions.js",
  entities: [Report]
}

query getVehicles {
  fn: import { getVehicles } from "@server/queries.js",
  entities: [Vehicle]
}

query getDrivers {
  fn: import { getDrivers } from "@server/queries.js",
  entities: [Driver]
}

query getReports {
  fn: import { getReports } from "@server/queries.js",
  entities: [Report]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/Dashboard.jsx",
  authRequired: true
}

route VehicleRoute { path: "/vehicle/:vehicleId", to: VehiclePage }
page VehiclePage {
  component: import { Vehicle } from "@client/pages/Vehicle.jsx",
  authRequired: true
}

route DriverRoute { path: "/driver/:driverId", to: DriverPage }
page DriverPage {
  component: import { Driver } from "@client/pages/Driver.jsx",
  authRequired: true
}

route ReportRoute { path: "/report/:reportId", to: ReportPage }
page ReportPage {
  component: import { Report } from "@client/pages/Report.jsx",
  authRequired: true
}